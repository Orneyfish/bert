# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
        import json
import logging
from configparser import ConfigParser
from elasticsearch import Elasticsearch
from bert_serving.client import BertClient
import pandas as pd

BERT_SERVICE_HOST = config.get("DOCUMENT_SEARCH", "BERT_SERVICE_HOST")


bert_client = BertClient(ip=BERT_SERVICE_HOST, output_fmt='list',check_length=False)
df = pd.read_csv("data_covid.csv")
df['title'] = df['title'].astype(str)
df['vector'] =""
for rows,index in df.iterrows():
    title = index['title']
    print(title)
    #break
    search_phrase_vector = bert_client.encode([title])[0]
    #print(search_phrase_vector)
    df.set_value(rows,'vector',search_phrase_vector)
    #break
    #df['vector'][ind] = search_phrase_vector
#print(df)
df.to_csv('bert_embeddings.csv', sep='\t')
